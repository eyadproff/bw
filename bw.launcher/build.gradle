project.ext.moduleName = 'bw.launcher'

apply plugin: 'application'

mainClassName = 'sa.gov.nic.bio.bw.AppLauncher'

run {
    inputs.property("moduleName", moduleName)
    doFirst {
        jvmArgs = [
                '--module-path', classpath.asPath,
                '--add-modules', 'ALL-MODULE-PATH',
                "--add-opens=javafx.base/com.sun.javafx.runtime=org.controlsfx.controls",
                "--add-opens=javafx.graphics/com.sun.javafx.css=org.controlsfx.controls",
                "--add-opens=javafx.graphics/com.sun.javafx.scene=org.controlsfx.controls",
                "--add-opens=javafx.graphics/com.sun.javafx.scene.traversal=org.controlsfx.controls",
                "--add-opens=javafx.controls/com.sun.javafx.scene.control=org.controlsfx.controls",
                "--add-opens=javafx.controls/com.sun.javafx.scene.control.behavior=org.controlsfx.controls",
                "--add-opens=javafx.controls/javafx.scene.control.skin=org.controlsfx.controls",
                "--add-opens=javafx.graphics/javafx.scene=org.controlsfx.controls",
                "--add-opens=java.base/java.util=org.apache.commons.lang3",
                "--add-opens=java.base/java.lang=org.apache.commons.lang3",
                "--add-opens=java.base/java.time=org.apache.commons.lang3",
                "--add-opens=java.base/java.util.zip=org.apache.commons.lang3",
                "--add-opens=java.base/jdk.internal.ref=org.apache.commons.lang3",
                "--add-opens=java.base/java.io=org.apache.commons.lang3",
                "--add-opens=java.base/sun.nio.fs=org.apache.commons.lang3",
                "--add-opens=java.base/sun.nio.ch=org.apache.commons.lang3",
                "--add-opens=java.base/java.lang.ref=org.apache.commons.lang3",
                "--add-opens=java.base/java.nio=org.apache.commons.lang3",
                "--add-opens=java.base/java.nio.channels=org.apache.commons.lang3",
                "--add-opens=java.base/java.nio.channels.spi=org.apache.commons.lang3",
                "--add-opens=java.base/java.util.concurrent.atomic=org.apache.commons.lang3",
                "--add-opens=java.base/java.util.jar=org.apache.commons.lang3",
                "--add-opens=java.base/sun.nio.cs=org.apache.commons.lang3",
                "--add-opens=java.base/java.nio.charset=org.apache.commons.lang3",
                "--add-opens=java.base/java.net=org.apache.commons.lang3",
                "--add-opens=java.desktop/java.awt=org.apache.commons.lang3",
                "--add-opens=java.base/java.time.chrono=bw.core",
                "--add-opens=javafx.controls/javafx.scene.control.skin=bw.core",
                "--add-opens=javafx.controls/com.sun.javafx.scene.control=org.scenicview.scenicview",
                '-Djava.library.path=../build-resources/javafx-dlls/64-bit;../build-resources/javafx-dlls/64-bit-extra',
                '-Djavafx.preloader=sa.gov.nic.bio.bw.preloader.AppPreloader',
                '--module', "$moduleName/$mainClassName"
        ]
        classpath = files()
    }
}

dependencies {
    implementation project(':bw.core')
    project(':').subprojects.each {
        if(it.name.startsWith("bw.workflow.") && it.name != "bw.workflow.commons") {
            runtimeOnly project(':' + it.name)
        }
    }
}

jar {
    manifest {
        attributes('Implementation-Title': project.name,
                'Implementation-Version': project.version,
                'Implementation-Vendor': 'NIC',
                'Application-Name': 'Biometrics Workstation',
                'Built-By': 'Biometrics Team',
                'JavaFX-Preloader-Class': 'sa.gov.nic.bio.bw.preloader.AppPreloader',
                'JavaFX-Application-Class': 'sa.gov.nic.bio.bw.AppLauncher',
                'Main-Class': 'sa.gov.nic.bio.bw.AppLauncher',
                'Trusted-Library': true,
                'Class-Path': configurations.runtimeClasspath.files.collect { it.getName() }.join(' '))
    }
}